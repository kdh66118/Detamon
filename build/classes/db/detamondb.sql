CREATE USER SEMI IDENTIFIED BY SEMI;
GRANT CONNECT, RESOURCE TO SEMI;


DROP TABLE MEMBER;
DROP TABLE MEMBER_ROLE;
DROP TABLE CATEGORY;
DROP TABLE LOCATION;
DROP TABLE PARTTIMER_ABILITY;
DROP TABLE COMPANY;
DROP TABLE CONTRACT;
DROP SEQUENCE CATEGORYSEQ;  --카테고리 시퀀스
DROP SEQUENCE LOCATIONSEQ;
DROP SEQUENCE MEMBERSEQ;
DROP SEQUENCE CONTRACTSEQ;
DROP SEQUENCE MEMBERSCORESEQ;
DROP SEQUENCE JOBBOARDSEQ;
DROP SEQUENCE TYPENOSEQ;
DROP TABLE JOBBOARD;
DROP TABLE JOBBOARD_TYPE;

CREATE SEQUENCE CATEGORYSEQ NOCACHE;  --카테고리 시퀀스
CREATE SEQUENCE LOCATIONSEQ  NOCACHE; --로케이션 시퀀스
CREATE SEQUENCE MEMBERSEQ  NOCACHE;   --회원시퀀스
CREATE SEQUENCE JOBBOARDSEQ  NOCACHE; --구인/구직게시판글 시퀀스
CREATE SEQUENCE TYPENOSEQ  NOCACHE; -- 개시판타입시퀀스
CREATE SEQUENCE CONTRACTSEQ  NOCACHE; --계약시퀀스
CREATE SEQUENCE MEMBERSCORESEQ NOCACHE; --멤버스코어 시퀀스


--등급 테이블
CREATE TABLE MEMBER_ROLE(
    ROLE_NO NUMBER PRIMARY KEY, --0,1,2
    ROLE_NAME VARCHAR(30) UNIQUE NOT NULL  --관리자,알바생,사장님
);


--카테고리
CREATE TABLE CATEGORY(
    C_NO NUMBER PRIMARY KEY,  --카테고리 번호
    C_NAME VARCHAR2(30) NOT NULL UNIQUE    --카테고리 이름
    
);






--지역
CREATE TABLE LOCATION(
    L_NO NUMBER PRIMARY KEY, --로케이션 넘버
    L_NAME VARCHAR2(30) NOT NULL UNIQUE --로케이션 이름
);





--알바생 업무능숙도 정보
CREATE TABLE PARTTIMER_ABILITY(
    M_NO NUMBER,   --회원 번호
    M_ID VARCHAR2(20) NOT NULL,
    C_NO NUMBER,      --카테고리 넘버
    A_CNT NUMBER DEFAULT 0, -- 업무능숙도 카운트
    PRIMARY KEY( M_NO, C_NO),
    FOREIGN KEY( M_NO) REFERENCES MEMBER(M_NO) ON DELETE CASCADE,
    FOREIGN KEY( M_ID) REFERENCES MEMBER(M_ID) ON DELETE CASCADE,
    FOREIGN KEY( C_NO) REFERENCES CATEGORY(C_NO) ON DELETE CASCADE    
);


--회원정보
CREATE TABLE MEMBER(
M_NO NUMBER PRIMARY KEY,  -- 회원 번호
M_ID VARCHAR2(20) UNIQUE NOT NULL,--아이디
M_PW VARCHAR2(30)  NOT NULL ,--비밀번호
M_NAME VARCHAR2(15) NOT NULL, --이름
M_RNO VARCHAR2(14) UNIQUE NOT NULL ,-- 주민등록번호
M_PHONE VARCHAR2(13) NOT NULL, -- 전화번호ㅡ
M_ADDR VARCHAR2(100) NOT NULL, --주소 
M_EMAIL VARCHAR2(100) NOT NULL, --이메일
M_GENDER VARCHAR2(1) CHECK(M_GENDER IN('M','F')) NOT NULL ,--성별
M_ROLE NUMBER  DEFAULT 1 CHECK(M_ROLE IN(0,1,2)) , -- 고용자 알바생구분 1->알바생 2->업주
M_SCORE NUMBER DEFAULT 0 CHECK(M_SCORE < 100),   --신뢰도
M_ENABLED VARCHAR2(2)  DEFAULT 'Y' NOT NULL CHECK(M_ENABLED IN('Y','N')), --탈퇴회원 확인
FOREIGN KEY (M_ROLE) REFERENCES MEMBER_ROLE(ROLE_NO) ON DELETE SET NULL 
);

--회원 점수 
DROP TABLE MEMBERSCORE;
CREATE TABLE MEMBERSCORE(
SCORE_NO NUMBER PRIMARY KEY,
ID VARCHAR2(20) NOT NULL, -- 회원 아이디 
SCORE NUMBER DEFAULT 0 CHECK(SCORE <= 100)  -- 회원 점수
);


--업체정보
CREATE TABLE COMPANY(
    
    M_ID VARCHAR2(20) PRIMARY KEY, --회원 아이디
    COM_NAME VARCHAR2(60) NOT NULL, -- 회사이름
    COM_LOCATION NUMBER , --회사 지역
    COM_ADDR VARCHAR2(100) NOT NULL, --회사 주소
    COM_CATEGORY NUMBER , --회사 업종
    COM_PHONE VARCHAR2(13)  NOT NULL  , --회사 핸드폰번호
    COM_SCORE NUMBER DEFAULT 0 CHECK(COM_SCORE < 100),   --신뢰도 평가점수
    FOREIGN KEY (M_ID) REFERENCES MEMBER(M_ID) ON DELETE CASCADE,
    FOREIGN KEY (COM_LOCATION) REFERENCES LOCATION(L_NO) ON DELETE SET NULL,
    FOREIGN KEY (COM_CATEGORY) REFERENCES CATEGORY(C_NO) ON DELETE SET NULL
);





-----회원가입시 알바생 능력테이블 인서트 트리거
DROP TRIGGER INSERT_ABILITY6;

CREATE TRIGGER INSERT_ABILITY1
AFTER INSERT ON MEMBER
FOR EACH ROW
BEGIN
   
    INSERT INTO PARTTIMER_ABILITY(M_NO,M_ID, C_NO)
    VALUES(:NEW.M_NO,:NEW.M_ID , 1);
    
END;
/

CREATE TRIGGER INSERT_ABILITY2
AFTER INSERT ON MEMBER
FOR EACH ROW
BEGIN    
     INSERT INTO PARTTIMER_ABILITY(M_NO,M_ID, C_NO)
    VALUES(:NEW.M_NO,:NEW.M_ID , 2);
END;
/

CREATE TRIGGER INSERT_ABILITY3
AFTER INSERT ON MEMBER
FOR EACH ROW
BEGIN    
    INSERT INTO PARTTIMER_ABILITY(M_NO,M_ID, C_NO)
    VALUES(:NEW.M_NO,:NEW.M_ID , 3);
END;
/

CREATE TRIGGER INSERT_ABILITY4
AFTER INSERT ON MEMBER
FOR EACH ROW
BEGIN    
     INSERT INTO PARTTIMER_ABILITY(M_NO,M_ID, C_NO)
    VALUES(:NEW.M_NO,:NEW.M_ID , 4);
END;
/

CREATE TRIGGER INSERT_ABILITY5
AFTER INSERT ON MEMBER
FOR EACH ROW
BEGIN    
    INSERT INTO PARTTIMER_ABILITY(M_NO,M_ID, C_NO)
    VALUES(:NEW.M_NO,:NEW.M_ID , 5);
END;
/

CREATE TRIGGER INSERT_ABILITY6
AFTER INSERT ON MEMBER
FOR EACH ROW
BEGIN    
   INSERT INTO PARTTIMER_ABILITY(M_NO,M_ID, C_NO)
    VALUES(:NEW.M_NO,:NEW.M_ID , 6);
END;
/

CREATE TRIGGER INSERT_ABILITY7
AFTER INSERT ON MEMBER
FOR EACH ROW
BEGIN    
   INSERT INTO PARTTIMER_ABILITY(M_NO,M_ID, C_NO)
    VALUES(:NEW.M_NO,:NEW.M_ID , 7);
END;
/


--카테 고리 정보 삽입
INSERT INTO CATEGORY
VALUES(CATEGORYSEQ.NEXTVAL,'카페'); 
INSERT INTO CATEGORY
VALUES(CATEGORYSEQ.NEXTVAL,'편의점'); 
INSERT INTO CATEGORY
VALUES(CATEGORYSEQ.NEXTVAL,'음식점'); 
INSERT INTO CATEGORY
VALUES(CATEGORYSEQ.NEXTVAL,'일용직'); 
INSERT INTO CATEGORY
VALUES(CATEGORYSEQ.NEXTVAL,'배달'); 
INSERT INTO CATEGORY
VALUES(CATEGORYSEQ.NEXTVAL,'유흥시설'); 
INSERT INTO CATEGORY
VALUES(CATEGORYSEQ.NEXTVAL,'기타'); 
SELECT * FROM CATEGORY;

--회원 등급 정보삽입
INSERT INTO MEMBER_ROLE
VALUES(0,'관리자');
INSERT INTO MEMBER_ROLE
VALUES(1,'알바생');
INSERT INTO MEMBER_ROLE
VALUES(2,'사장님');

SELECT * FROM MEMBER_ROLE;


--로케이션 정보 삽입
INSERT INTO LOCATION
VALUES(LOCATIONSEQ.NEXTVAL,'강남구');
INSERT INTO LOCATION
VALUES(LOCATIONSEQ.NEXTVAL,'송파구');
INSERT INTO LOCATION
VALUES(LOCATIONSEQ.NEXTVAL,'서초구');
INSERT INTO LOCATION
VALUES(LOCATIONSEQ.NEXTVAL,'강동구');
INSERT INTO LOCATION
VALUES(LOCATIONSEQ.NEXTVAL,'동작구');
INSERT INTO LOCATION
VALUES(LOCATIONSEQ.NEXTVAL,'관악구');
INSERT INTO LOCATION
VALUES(LOCATIONSEQ.NEXTVAL,'영등포구');
INSERT INTO LOCATION
VALUES(LOCATIONSEQ.NEXTVAL,'강서구');
INSERT INTO LOCATION
VALUES(LOCATIONSEQ.NEXTVAL,'양천구');
INSERT INTO LOCATION
VALUES(LOCATIONSEQ.NEXTVAL,'구로구');
INSERT INTO LOCATION
VALUES(LOCATIONSEQ.NEXTVAL,'금천구');
INSERT INTO LOCATION
VALUES(LOCATIONSEQ.NEXTVAL,'종로구');
INSERT INTO LOCATION
VALUES(LOCATIONSEQ.NEXTVAL,'중구');
INSERT INTO LOCATION
VALUES(LOCATIONSEQ.NEXTVAL,'동대문구');
INSERT INTO LOCATION
VALUES(LOCATIONSEQ.NEXTVAL,'중랑구');
INSERT INTO LOCATION
VALUES(LOCATIONSEQ.NEXTVAL,'마포구');
INSERT INTO LOCATION
VALUES(LOCATIONSEQ.NEXTVAL,'용산구');
INSERT INTO LOCATION
VALUES(LOCATIONSEQ.NEXTVAL,'성동구');
INSERT INTO LOCATION
VALUES(LOCATIONSEQ.NEXTVAL,'광진구');
INSERT INTO LOCATION
VALUES(LOCATIONSEQ.NEXTVAL,'은평구');
INSERT INTO LOCATION
VALUES(LOCATIONSEQ.NEXTVAL,'서대문구');
INSERT INTO LOCATION
VALUES(LOCATIONSEQ.NEXTVAL,'성북구');
INSERT INTO LOCATION
VALUES(LOCATIONSEQ.NEXTVAL,'강북구');
INSERT INTO LOCATION
VALUES(LOCATIONSEQ.NEXTVAL,'도봉구');
INSERT INTO LOCATION
VALUES(LOCATIONSEQ.NEXTVAL,'노원구');

SELECT * FROM LOCATION;




SELECT * FROM MEMBER;
SELECT * FROM PARTTIMER_ABILITY;
SELECT * FROM COMPANY;
COMMIT;

---------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------
---                                                                                게                         시                                   글                                                                                         ---
---------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------

--구인/구직 게시판 TABLE
CREATE TABLE JOBBOARD(
    NO NUMBER PRIMARY KEY,   --글 번호
    WRITER VARCHAR2(100) NOT NULL, -- 작성자 id
    TITLE VARCHAR2(1000) NOT NULL, --제목
    CONTENT VARCHAR2(2000) NOT NULL, --내용
    START_DATE DATE NOT NULL, -- 알바시작날짜
    END_DATE DATE, --알바 끝나는 날짜
    START_TIME DATE NOT NULL, --알바 시작 시간
    END_TIME DATE NOT NULL,     --알바 끝 시간
    MONEY VARCHAR2(1000) NOT NULL, --시급
    LOC NUMBER NOT NULL,  -- 지역
    CATEGORY NUMBER NOT NULL, --카테고리
    REGDATE DATE NOT NULL, --작성날짜
    CNT NUMBER DEFAULT 0, --조회수
    TYPE_NO NUMBER NOT NULL, --게시판 종류
     FOREIGN KEY (TYPE_NO) REFERENCES JOBBOARD_TYPE(TYPE_NO) ON DELETE CASCADE,
      FOREIGN KEY (LOC) REFERENCES LOCATION(L_NO) ON DELETE SET NULL,
       FOREIGN KEY (CATEGORY) REFERENCES CATEGORY(C_NO) ON DELETE SET NULL
);

--구인/구직 게시판 시퀀스

--구인/구직 게시판 종류 TABLE(업체찾기, 알바생찾기)
CREATE TABLE JOBBOARD_TYPE(
    TYPE_NO NUMBER PRIMARY KEY, --게시판 종류
    BOARD_NAME VARCHAR2(100) NOT NULL UNIQUE -- 게시판 이름
);
SELECT * FROM JOBBOARD_TYPE;

--구인/구직 게시판 타입 시퀀스


-------게시판 종류 삽입
INSERT INTO JOBBOARD_TYPE
VALUES(1,'알바생찾기');
INSERT INTO JOBBOARD_TYPE
VALUES(2,'업체찾기');


---------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------
---                                                                               계                                                             약                                                                                        ---
---------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------


CREATE TABLE CONTRACT(
    CON_NO NUMBER PRIMARY KEY,      --계약 번호
    BOARD_NO NUMBER NOT NULL, -- 게시글 번호
    PARTTIMER_ID VARCHAR2(20) NOT NULL, --알바생 아이디
    COMPANY_ID VARCHAR2(20) NOT NULL, --업체아이디
   	--계약여부 Y=수락, N=신청상태, X=거절, Z=계약종료
    IS_CONTRACT VARCHAR2(2) DEFAULT 'N'  NOT NULL CHECK( IS_CONTRACT IN ('Y','N','Z','X') ), --계약여부
    --업체가 알바생평가 기본값은 N 평가 후  Y로
    ALBAESTIMATE VARCHAR2(2) DEFAULT 'N'  NOT NULL CHECK( ALBAESTIMATE IN ('N','Y') ),
    --알바생이 업체평가 기본값은 N 평가 후  Y로
    COMESTIMATE VARCHAR2(2) DEFAULT 'N'  NOT NULL CHECK( COMESTIMATE IN ('N','Y') )
);

COMMIT;

INSERT INTO CONTRACT VALUES(CONTRACTSEQ.NEXTVAL, '1', 'admin', 'bin3005', 'N');
INSERT INTO CONTRACT VALUES(CONTRACTSEQ.NEXTVAL, '2', 'admin', 'bin3005', 'Y');



INSERT INTO JOBBOARD VALUES(JOBBOARDSEQ.NEXTVAL, 'admin','스노윙 치킨 잘튀기시는분' ,'내용',SYSDATE,SYSDATE,SYSDATE,SYSDATE,8700,1,1,SYSDATE,0,2 );
INSERT INTO JOBBOARD VALUES(JOBBOARDSEQ.NEXTVAL, 'admin2','부산역 근처 치킨' ,'내용테스트',SYSDATE,SYSDATE,SYSDATE,SYSDATE,9700,1,1,SYSDATE,0,2 );
INSERT INTO JOBBOARD VALUES(JOBBOARDSEQ.NEXTVAL, 'user','카페 알바 경험자 구합니다(여성우대)' ,'아이스아메리카노 맛있겠당',SYSDATE,SYSDATE,SYSDATE,SYSDATE,6700,1,1,SYSDATE,0,1 );

INSERT INTO MEMBER
VALUES(MEMBERSEQ.NEXTVAL,'zxcv','zxcv','성효','960708-1174111','010-1284-5678','서울특별시 강서구 역삼동 kh정육원','qve@kh.com','M',2,0,'Y');
INSERT INTO  COMPANY
VALUES ('admin','네네치킨', 4, '서울특별시', 2, '010-1111-2222',0); 



INSERT INTO MEMBER
VALUES(MEMBERSEQ.NEXTVAL,'admin2','admin','admin','950308-1111111','010-1234-5678','서울특별시 강남구 역삼동 kh정보교육원','qwe@kh.com','M',0,0,'Y');
INSERT INTO  COMPANY
VALUES ( 'admin2','땅땅치킨', 4, '부산광역시', 2, '010-1111-2222',0); 


INSERT INTO MEMBER
VALUES(MEMBERSEQ.NEXTVAL,'cafe','cafe','김벽진','952308-1111111','010-2324-5678','서울특별시 강남구 역삼동 kh정보교육원','qwe@kh.com','M',2,0,'Y');
INSERT INTO  COMPANY
VALUES ( 'cafe','바나프레소 역삼GFC점', 1, '강남구 테헤란로26길 10 성보빌딩', 1, '070-8998-8941',0); 

SELECT * FROM MEMBER;
SELECT * FROM MEMBER_ROLE;
SELECT * FROM COMPANY;
SELECT * FROM LOCATION;
SELECT * FROM CATEGORY;
SELECT * FROM JOBBOARD;
SELECT* FROM CONTRACT;
SELECT * FROM PARTTIMER_ABILITY;

COMMIT;



INSERT INTO JOBBOARD VALUES(JOBBOARDSEQ.NEXTVAL, 'admin2','부산역 근처 치킨' ,'내용테스트','2020-12-21',SYSDATE,SYSDATE,SYSDATE,9700,1,1,SYSDATE,15,2 );
INSERT INTO JOBBOARD VALUES(JOBBOARDSEQ.NEXTVAL, 'admin2','부산역 근처 치킨' ,'내용테스트','2020-12-11',SYSDATE,SYSDATE,SYSDATE,9700,1,1,SYSDATE,5,2 );
INSERT INTO JOBBOARD VALUES(JOBBOARDSEQ.NEXTVAL, 'admin2','부산역 근처 치킨' ,'내용테스트','2021-02-21',SYSDATE,SYSDATE,SYSDATE,9700,1,1,SYSDATE,35,2 );
INSERT INTO JOBBOARD VALUES(JOBBOARDSEQ.NEXTVAL, 'cafe','부산역 근처 카페' ,'내용테스트','2021-06-21',SYSDATE,SYSDATE,SYSDATE,9700,1,1,SYSDATE,102,2 );
INSERT INTO JOBBOARD VALUES(JOBBOARDSEQ.NEXTVAL, 'admin','부산역 근처 카페' ,'내용테스트','2021-06-21',SYSDATE,SYSDATE,SYSDATE,9700,1,1,SYSDATE,121,1 );

